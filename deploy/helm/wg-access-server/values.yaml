# wg-access-server config
config: {}

## Provide an existing secret with the following keys:
##
## data:
##   WG_ADMIN_PASSWORD: X
##   WG_ADMIN_USERNAME: X
##   WG_WIREGUARD_PRIVATE_KEY: X
##
## overrides:
## web.config.adminUsername
## web.config.adminPassword
## wireguard.config.privateKey
##
# existingSecret: ""

web:
  config:
    adminUsername: ""
    adminPassword: ""
  service:
    type: ClusterIP

wireguard:
  config:
    privateKey: ""
  service:
    type: ClusterIP

persistence:
  enabled: false
  ## Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  size: 100Mi
  annotations: {}
  accessModes:
    - ReadWriteOnce
  subPath: ""


ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    # - www.example.com
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nameOverride: ""

fullnameOverride: ""

imagePullSecrets: []

image:
  repository: place1/wg-access-server
  pullPolicy: IfNotPresent

# multiple replicas is only supported when using
# a supported highly-available storage backend (i.e. postgresql)
replicas: 1

strategy: {}
  # the deployment strategy type will default to "Recreate" when persistence is enabled
  # or "RollingUpdate" when persistence is not enabled.
  # type: Recreate

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
